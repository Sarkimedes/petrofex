//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PetrofexSystem.Wcf.TestClient.PetrofexSystem.Messaging.Wcf.TestClient.Service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/PetrofexSystem.Messaging")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PetrofexSystem.Wcf.TestClient.PetrofexSystem.Messaging.Wcf.TestClient.Service.MessageType MessageTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PayloadField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PetrofexSystem.Wcf.TestClient.PetrofexSystem.Messaging.Wcf.TestClient.Service.MessageType MessageType {
            get {
                return this.MessageTypeField;
            }
            set {
                if ((this.MessageTypeField.Equals(value) != true)) {
                    this.MessageTypeField = value;
                    this.RaisePropertyChanged("MessageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageType", Namespace="http://schemas.datacontract.org/2004/07/PetrofexSystem.Messaging")]
    public enum MessageType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hello = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PubKey = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Start = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StartOk = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Connected = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disconnect = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PetrofexSystem.Messaging.Wcf.TestClient.Service.IMessagingService")]
    public interface IMessagingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessagingService/SendMessage", ReplyAction="http://tempuri.org/IMessagingService/SendMessageResponse")]
        void SendMessage(PetrofexSystem.Wcf.TestClient.PetrofexSystem.Messaging.Wcf.TestClient.Service.Message message, System.Action<PetrofexSystem.Wcf.TestClient.PetrofexSystem.Messaging.Wcf.TestClient.Service.Message> onMessageHandledCallback);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessagingServiceChannel : PetrofexSystem.Wcf.TestClient.PetrofexSystem.Messaging.Wcf.TestClient.Service.IMessagingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessagingServiceClient : System.ServiceModel.ClientBase<PetrofexSystem.Wcf.TestClient.PetrofexSystem.Messaging.Wcf.TestClient.Service.IMessagingService>, PetrofexSystem.Wcf.TestClient.PetrofexSystem.Messaging.Wcf.TestClient.Service.IMessagingService {
        
        public MessagingServiceClient() {
        }
        
        public MessagingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MessagingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessagingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessagingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SendMessage(PetrofexSystem.Wcf.TestClient.PetrofexSystem.Messaging.Wcf.TestClient.Service.Message message, System.Action<PetrofexSystem.Wcf.TestClient.PetrofexSystem.Messaging.Wcf.TestClient.Service.Message> onMessageHandledCallback) {
            base.Channel.SendMessage(message, onMessageHandledCallback);
        }
    }
}
